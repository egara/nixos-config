# Key bindings

# Set programs that I use
$terminal = kitty
$fileManager = thunar
#$menu = wofi --show drun
$menu = walker
$browser = firefox
$webapp = google-chrome-stable --app

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Simple binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# For finding a special KEY, install wev application
bind = CONTROLALT, T, exec, uwsm app -- $terminal
bind = $mainMod, Y, exec, uwsm app -- $terminal yazi
bind = $mainMod, S, exec, uwsm app -- spotify
bind = $mainMod, Q, killactive, 
bind = CONTROLALT, Delete, exit,
bind = $mainMod, E, exec, uwsm app -- $fileManager
bind = $mainMod, F, togglefloating, 
bind = $mainMod, KP_Multiply, pseudo, # dwindle
bind = $mainMod, KP_DIVIDE, togglesplit, # dwindle
bind = $mainMod, W, exec, uwsm app -- $browser
bind = $mainMod, P, exec, uwsm app -- $browser --private-window
bind = $mainMod, G, exec, uwsm app -- $webapp="https://gemini.google.com/"
bind = SUPER, SUPER_L, exec, uwsm app -- $menu # App launcher
#bind = SUPER, SUPER_L, exec, pgrep -x .wofi-wrapped >/dev/null 2>&1 && killall .wofi-wrapped || $menu # App launcher if wofi is not running. If it is running, kill it in order to avoid multiple instances
bind = $mainMod CONTROL, up, fullscreen, 1
bind = $mainMod, KP_Subtract, exec, dunstctl history-pop # Notifications history
bind = $mainMod ALT, right, resizeactive, 20 0
bind = $mainMod ALT, left, resizeactive, -20 0
bind = $mainMod ALT, up, resizeactive, 0 -20
bind = $mainMod ALT, down, resizeactive, 0 20
bind = ALT, tab, cyclenext
## Windows switcher using hyprswitch (https://github.com/H3rmt/hyprswitch)
#bind = ALT, tab, exec, hyprswitch
#bind = ALT SHIFT, tab, exec, hyprswitch -r

# Volume
# pamixer is needed to get the volume via command line
bind =, xf86audioraisevolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && dunstify -a "-- Changing volume --" -u low -r 9993 -h int:value:$(pamixer --get-volume) "Volume: $(pamixer --get-volume)%"
bind =, xf86audiolowervolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && dunstify -a "-- Changing volume --" -u low -r 9993 -h int:value:$(pamixer --get-volume) "Volume: $(pamixer --get-volume)%"
bind =, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && if [ "$(pamixer --get-mute)" == "true" ]; then dunstify -a "-- Changing volume --" -u low -r 9993 "Volume Muted"; else dunstify -a "-- Changing volume --" -u low -r 9993 "Volume Unmuted"; fi

# Screen brighness
# brightnessctl is needed to change the screen brighness via command line
bind =, XF86MonBrightnessUp, exec, brightnessctl s +5% && dunstify -a "-- Changing brightness --" -u low -r 9993 -h int:value:$(brightnessctl g) "Brightness: $(brightnessctl g)%"
bind =, XF86MonBrightnessDown, exec, brightnessctl s 5%- && dunstify -a "-- Changing brightness --" -u low -r 9993 -h int:value:$(brightnessctl g) "Brightness: $(brightnessctl g)%"

# Change the wallpaper randomly
bind = $mainMod, 1, exec, swww img /home/egarcia/Insync/eloy.garcia.pca@gmail.com/Google\ Drive/Wallpapers/$(ls /home/egarcia/Insync/eloy.garcia.pca@gmail.com/Google\ Drive/Wallpapers | shuf -n 1)

# Screen capture
bind =, Print, exec, grim -g "$(slurp)"

# Lock screen manually
#bind = CONTROLALT, L, exec, $lock -f -c 000000
bind = CONTROLALT, L, exec, $lock --clock --indicator --screenshots --effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 4x2 --datestr "%a %e.%m.%Y" --timestr "%k:%M"

# Clipboard
#bind = $mainMod, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# Submaps binds
# Resizing
bind = $mainMod, RETURN, submap, moveWindow # will switch to a submap called moveWindow
submap = moveWindow # will start a submap called "resize"
binde = , right, movewindow, r
binde = , left, movewindow, l
binde = , up, movewindow, u
binde = , down, movewindow, d
bind = , escape, submap, reset # use reset to go back to the global submap
submap = reset # will reset the submap, meaning end the current one and return to the global one.

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces
# Current solution using hyprnome
bind = CONTROLALT, left, exec, hyprnome --previous
bind = CONTROLALT, right, exec, hyprnome
# Old solution without hyprnome
#bind = CONTROLALT, left, workspace, 1
#bind = CONTROLALT, right, workspace, 2
#bind = CONTROLALT, up, workspace, 3
#bind = CONTROLALT, down, workspace, 4
# [ORIGINAL] Switch workspaces
#bind = $mainMod, 5, workspace, 5
#bind = $mainMod, 6, workspace, 6
#bind = $mainMod, 7, workspace, 7
#bind = $mainMod, 8, workspace, 8
#bind = $mainMod, 9, workspace, 9
#bind = $mainMod, 0, workspace, 10

# Move active window to a workspace
# Current solution using hyprnome
bind = CONTROLALT SHIFT, left, exec, hyprnome --previous --move
bind = CONTROLALT SHIFT, right, exec, hyprnome --move
#bind = CONTROLALT SHIFT, left, movetoworkspace, +1
#bind = CONTROLALT SHIFT, right, movetoworkspace, -1
# Old solution without hyprnome
#bind = CONTROLALT SHIFT, left, movetoworkspace, 1
#bind = CONTROLALT SHIFT, right, movetoworkspace, 2
#bind = CONTROLALT SHIFT, up, movetoworkspace, 3
#bind = CONTROLALT SHIFT, down, movetoworkspace, 4
# [ORIGINAL] Move active window to a workspace with mainMod + SHIFT + [0-9]
#bind = $mainMod SHIFT, 5, movetoworkspace, 5
#bind = $mainMod SHIFT, 6, movetoworkspace, 6
#bind = $mainMod SHIFT, 7, movetoworkspace, 7
#bind = $mainMod SHIFT, 8, movetoworkspace, 8
#bind = $mainMod SHIFT, 9, movetoworkspace, 9
#bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Special workspace (scratchpad)
bind = $mainMod, M, togglespecialworkspace, magic
bind = CONTROLALT SHIFT, M, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow